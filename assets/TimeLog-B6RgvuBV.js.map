{"version":3,"file":"TimeLog-B6RgvuBV.js","sources":["../../src/components/admin/TimeLog.vue"],"sourcesContent":["<template>\n  <div class=\"time-log-container\">\n    <h2 class=\"section-title\">Time Log</h2>\n    <div class=\"time-log-sections\">\n      <button @click=\"activeSection = 'daily'\" :class=\"{ active: activeSection === 'daily' }\">Daily</button>\n      <button @click=\"activeSection = 'weekly'\" :class=\"{ active: activeSection === 'weekly' }\">Weekly</button>\n      <button @click=\"activeSection = 'custom'\" :class=\"{ active: activeSection === 'custom' }\">Custom</button>\n    </div>\n    <div class=\"filters\">\n      <div class=\"filter-group\">\n        <label for=\"agent-select\">Agent:</label>\n        <select id=\"agent-select\" v-model=\"selectedAgent\" class=\"filter-dropdown\">\n          <option value=\"\">All Agents</option>\n          <option v-for=\"agent in uniqueAgents\" :key=\"agent\" :value=\"agent\">{{ agent }}</option>\n        </select>\n      </div>\n      \n      <div class=\"filter-group\" v-if=\"activeSection === 'daily' || activeSection === 'custom'\">\n        <label for=\"date-select\">Date:</label>\n        <input id=\"date-select\" type=\"date\" v-model=\"selectedDate\" class=\"filter-dropdown\" />\n      </div>\n      \n      <div class=\"filter-group\" v-if=\"activeSection === 'weekly'\">\n        <label for=\"week-select\">Week:</label>\n        <select id=\"week-select\" v-model=\"selectedWeek\" class=\"filter-dropdown\">\n          <option v-for=\"week in availableWeeks\" :key=\"week\" :value=\"week\">{{ week }}</option>\n        </select>\n      </div>\n      \n      <button @click=\"downloadLogs\" class=\"download-btn\">\n        <i class=\"download-icon\">â†“</i> Download Logs\n      </button>\n    </div>\n    <div class=\"time-log-content\">\n      <div v-if=\"loading\">Loading time logs...</div>\n      <div v-else-if=\"filteredTimeLogs.length === 0\">No time logs found.</div>\n      <div v-else>\n        <ul class=\"time-log-list\">\n          <li v-for=\"log in filteredTimeLogs\" :key=\"log.$id\" class=\"time-log-item\">\n            <span class=\"log-user\">User: {{ getUserDisplayName(log.user_Id) }}</span>\n            <span class=\"log-status\">{{ log.Status }}</span>\n            <span class=\"log-timestamp\">{{ new Date(log.timestamp).toLocaleString() }}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue';\nimport { databases, Query } from '../../lib/appwrite';\n\nconst timeLogs = ref([]);\nconst loading = ref(true);\nconst activeSection = ref('daily');\nconst uniqueAgents = ref([]);\nconst selectedAgent = ref('');\nconst selectedDate = ref(new Date().toISOString().slice(0, 10));\nconst selectedWeek = ref('');\nconst availableWeeks = ref([]);\nconst userProfiles = ref({});\n\nonMounted(() => {\n  fetchTimeLogs();\n  // Example logic to populate availableWeeks\n  const currentDate = new Date();\n  for (let i = 0; i < 4; i++) {\n    const startOfWeek = new Date(currentDate);\n    startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay() - (i * 7));\n    const endOfWeek = new Date(startOfWeek);\n    endOfWeek.setDate(endOfWeek.getDate() + 6);\n    availableWeeks.value.push(`${startOfWeek.toLocaleDateString()} - ${endOfWeek.toLocaleDateString()}`);\n  }\n});\n\nconst fetchTimeLogs = async () => {\n  loading.value = true;\n  try {\n    // Fetch time logs\n    const response = await databases.listDocuments(\n      '684639c3000fbbd515ea',\n      '68463a24000779b721a1',\n      [Query.orderDesc('timestamp')]\n    );\n    timeLogs.value = response.documents;\n    \n    // Get unique user IDs\n    const userIds = [...new Set(response.documents.map(doc => doc.user_Id))];\n    uniqueAgents.value = userIds;\n    \n    // Fetch user profiles for display names\n    await fetchUserProfiles(userIds);\n  } catch (error) {\n    console.error('Failed to fetch time logs:', error);\n  } finally {\n    loading.value = false;\n  }\n};\n\nconst fetchUserProfiles = async (userIds) => {\n  try {\n    // Fetch all profiles\n    const response = await databases.listDocuments(\n      '684639c3000fbbd515ea',\n      '68465330002c380c2975'\n    );\n    \n    // Create a map of user_Id to displayName\n    const profiles = {};\n    response.documents.forEach(profile => {\n      if (profile.user_Id) {\n        profiles[profile.user_Id] = profile.displayName || '';\n      }\n    });\n    \n    userProfiles.value = profiles;\n    console.log('Fetched profiles:', profiles);\n  } catch (error) {\n    console.error('Failed to fetch user profiles:', error);\n  }\n};\n\nconst getUserDisplayName = (userId) => {\n  const displayName = userProfiles.value[userId];\n  if (displayName) {\n    return `${displayName} (${userId})`;\n  }\n  return userId;\n};\n\nconst filteredTimeLogs = computed(() => {\n  let logs = timeLogs.value;\n  \n  // Filter by agent if selected\n  if (selectedAgent.value) {\n    logs = logs.filter(log => log.user_Id === selectedAgent.value);\n  }\n  \n  // Apply date filters based on active section\n  if (activeSection.value === 'daily') {\n    logs = logs.filter(log => new Date(log.timestamp).toISOString().slice(0, 10) === selectedDate.value);\n  } else if (activeSection.value === 'weekly') {\n    // Parse the selected week range\n    if (selectedWeek.value) {\n      const [startDateStr] = selectedWeek.value.split(' - ');\n      const startOfWeek = new Date(startDateStr);\n      const endOfWeek = new Date(startOfWeek);\n      endOfWeek.setDate(endOfWeek.getDate() + 6);\n      \n      logs = logs.filter(log => {\n        const logDate = new Date(log.timestamp);\n        return logDate >= startOfWeek && logDate <= endOfWeek;\n      });\n    }\n  } else if (activeSection.value === 'custom') {\n    // For custom, we just use the selected date\n    logs = logs.filter(log => new Date(log.timestamp).toISOString().slice(0, 10) === selectedDate.value);\n  }\n  \n  return logs;\n});\n\nconst downloadLogs = () => {\n  const data = filteredTimeLogs.value.map(log => ({\n    user: log.user_Id,\n    status: log.Status,\n    timestamp: new Date(log.timestamp).toLocaleString(),\n  }));\n  const csvContent = \"data:text/csv;charset=utf-8,\"\n    + [\"User,Status,Timestamp\"].join(\",\") + \"\\n\"\n    + data.map(e => Object.values(e).join(\",\")).join(\"\\n\");\n  \n  const encodedUri = encodeURI(csvContent);\n  const link = document.createElement(\"a\");\n  link.setAttribute(\"href\", encodedUri);\n  link.setAttribute(\"download\", \"time_logs.csv\");\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n};\n\nonMounted(fetchTimeLogs);\n</script>\n\n<style scoped>\n.time-log-container {\n  background: rgba(45, 55, 72, 0.8);\n  padding: 24px;\n  border-radius: 16px;\n}\n.section-title {\n  font-size: 1.8rem;\n  font-weight: bold;\n  margin-bottom: 24px;\n  color: #ffc107;\n}\n.time-log-sections {\n  display: flex;\n  gap: 16px;\n  margin-bottom: 24px;\n}\n.time-log-sections button {\n  background: #2d3748;\n  color: #a0aec0;\n  border: none;\n  padding: 16px 24px;\n  border-radius: 16px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background 0.3s ease;\n  font-size: 1.1rem;\n}\n.time-log-sections button:hover {\n  background: #ffc107;\n  color: #1a202c;\n}\n.time-log-sections button.active {\n  background: #ffc107;\n  color: #1a202c;\n}\n.filters {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  margin-bottom: 24px;\n  align-items: flex-end;\n}\n\n.filter-group {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.filter-group label {\n  font-size: 0.9rem;\n  color: #e2e8f0;\n}\n\n.filter-dropdown {\n  background: rgba(255, 255, 255, 0.9);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 8px;\n  padding: 10px 16px;\n  color: #333;\n  min-width: 180px;\n  font-weight: 500;\n}\n\n.download-btn {\n  background: #ffc107;\n  color: #1a202c;\n  border: none;\n  padding: 10px 16px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-left: auto;\n}\n\n.download-btn:hover {\n  background: #e0a800;\n}\n\n.download-icon {\n  font-style: normal;\n  font-weight: bold;\n}\n.time-log-list {\n  list-style: none;\n  padding: 0;\n}\n.time-log-item {\n  display: flex;\n  justify-content: space-between;\n  background: #2d3748;\n  padding: 16px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n}\n</style>"],"names":["timeLogs","ref","loading","activeSection","uniqueAgents","selectedAgent","selectedDate","selectedWeek","availableWeeks","userProfiles","onMounted","fetchTimeLogs","currentDate","i","startOfWeek","endOfWeek","response","databases","Query","userIds","doc","fetchUserProfiles","error","profiles","profile","getUserDisplayName","userId","displayName","filteredTimeLogs","computed","logs","log","startDateStr","logDate","downloadLogs","data","csvContent","e","encodedUri","link"],"mappings":"qmBAqDA,MAAMA,EAAWC,EAAI,EAAE,EACjBC,EAAUD,EAAI,EAAI,EAClBE,EAAgBF,EAAI,OAAO,EAC3BG,EAAeH,EAAI,EAAE,EACrBI,EAAgBJ,EAAI,EAAE,EACtBK,EAAeL,EAAI,IAAI,KAAM,EAAC,YAAW,EAAG,MAAM,EAAG,EAAE,CAAC,EACxDM,EAAeN,EAAI,EAAE,EACrBO,EAAiBP,EAAI,EAAE,EACvBQ,EAAeR,EAAI,EAAE,EAE3BS,EAAU,IAAM,CACdC,EAAe,EAEf,MAAMC,EAAc,IAAI,KACxB,QAASC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMC,EAAc,IAAI,KAAKF,CAAW,EACxCE,EAAY,QAAQA,EAAY,QAAS,EAAGA,EAAY,OAAQ,EAAID,EAAI,CAAE,EAC1E,MAAME,EAAY,IAAI,KAAKD,CAAW,EACtCC,EAAU,QAAQA,EAAU,QAAO,EAAK,CAAC,EACzCP,EAAe,MAAM,KAAK,GAAGM,EAAY,mBAAoB,CAAA,MAAMC,EAAU,mBAAkB,CAAE,EAAE,CACvG,CACA,CAAC,EAED,MAAMJ,EAAgB,SAAY,CAChCT,EAAQ,MAAQ,GAChB,GAAI,CAEF,MAAMc,EAAW,MAAMC,EAAU,cAC/B,uBACA,uBACA,CAACC,EAAM,UAAU,WAAW,CAAC,CAC9B,EACDlB,EAAS,MAAQgB,EAAS,UAG1B,MAAMG,EAAU,CAAC,GAAG,IAAI,IAAIH,EAAS,UAAU,IAAII,GAAOA,EAAI,OAAO,CAAC,CAAC,EACvEhB,EAAa,MAAQe,EAGrB,MAAME,EAAkBF,CAAO,CAChC,OAAQG,EAAO,CACd,QAAQ,MAAM,6BAA8BA,CAAK,CACrD,QAAY,CACRpB,EAAQ,MAAQ,EACpB,CACA,EAEMmB,EAAoB,MAAOF,GAAY,CAC3C,GAAI,CAEF,MAAMH,EAAW,MAAMC,EAAU,cAC/B,uBACA,sBACD,EAGKM,EAAW,CAAE,EACnBP,EAAS,UAAU,QAAQQ,GAAW,CAChCA,EAAQ,UACVD,EAASC,EAAQ,OAAO,EAAIA,EAAQ,aAAe,GAE3D,CAAK,EAEDf,EAAa,MAAQc,EACrB,QAAQ,IAAI,oBAAqBA,CAAQ,CAC1C,OAAQD,EAAO,CACd,QAAQ,MAAM,iCAAkCA,CAAK,CACzD,CACA,EAEMG,EAAsBC,GAAW,CACrC,MAAMC,EAAclB,EAAa,MAAMiB,CAAM,EAC7C,OAAIC,EACK,GAAGA,CAAW,KAAKD,CAAM,IAE3BA,CACT,EAEME,EAAmBC,EAAS,IAAM,CACtC,IAAIC,EAAO9B,EAAS,MAQpB,GALIK,EAAc,QAChByB,EAAOA,EAAK,OAAOC,GAAOA,EAAI,UAAY1B,EAAc,KAAK,GAI3DF,EAAc,QAAU,QAC1B2B,EAAOA,EAAK,OAAOC,GAAO,IAAI,KAAKA,EAAI,SAAS,EAAE,YAAW,EAAG,MAAM,EAAG,EAAE,IAAMzB,EAAa,KAAK,UAC1FH,EAAc,QAAU,UAEjC,GAAII,EAAa,MAAO,CACtB,KAAM,CAACyB,CAAY,EAAIzB,EAAa,MAAM,MAAM,KAAK,EAC/CO,EAAc,IAAI,KAAKkB,CAAY,EACnCjB,EAAY,IAAI,KAAKD,CAAW,EACtCC,EAAU,QAAQA,EAAU,QAAO,EAAK,CAAC,EAEzCe,EAAOA,EAAK,OAAOC,GAAO,CACxB,MAAME,EAAU,IAAI,KAAKF,EAAI,SAAS,EACtC,OAAOE,GAAWnB,GAAemB,GAAWlB,CACpD,CAAO,CACP,OACaZ,EAAc,QAAU,WAEjC2B,EAAOA,EAAK,OAAOC,GAAO,IAAI,KAAKA,EAAI,SAAS,EAAE,YAAW,EAAG,MAAM,EAAG,EAAE,IAAMzB,EAAa,KAAK,GAGrG,OAAOwB,CACT,CAAC,EAEKI,EAAe,IAAM,CACzB,MAAMC,EAAOP,EAAiB,MAAM,IAAIG,IAAQ,CAC9C,KAAMA,EAAI,QACV,OAAQA,EAAI,OACZ,UAAW,IAAI,KAAKA,EAAI,SAAS,EAAE,eAAgB,CACvD,EAAI,EACIK,EAAa,+BACf,CAAC,uBAAuB,EAAE,KAAK,GAAG,EAAI;AAAA,EACtCD,EAAK,IAAIE,GAAK,OAAO,OAAOA,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK;AAAA,CAAI,EAEjDC,EAAa,UAAUF,CAAU,EACjCG,EAAO,SAAS,cAAc,GAAG,EACvCA,EAAK,aAAa,OAAQD,CAAU,EACpCC,EAAK,aAAa,WAAY,eAAe,EAC7C,SAAS,KAAK,YAAYA,CAAI,EAC9BA,EAAK,MAAO,EACZ,SAAS,KAAK,YAAYA,CAAI,CAChC,EAEA,OAAA7B,EAAUC,CAAa"}