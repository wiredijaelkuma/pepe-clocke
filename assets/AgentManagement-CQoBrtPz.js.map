{"version":3,"file":"AgentManagement-CQoBrtPz.js","sources":["../../src/components/admin/AgentManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"agent-management-container\">\r\n    <h2 class=\"section-title\">Agent Management</h2>\r\n    <div v-if=\"loading\">Loading agents...</div>\r\n    <div v-else-if=\"agents.length === 0\">No agents found.</div>\r\n    <ul v-else class=\"agents-list\">\r\n      <li v-for=\"agent in agents\" :key=\"agent.userId\" class=\"agent-item\">\r\n        <div class=\"agent-info\">\r\n          <span class=\"agent-id\">User ID: {{ agent.userId }}</span>\r\n          <span class=\"agent-name\" v-if=\"agent.displayName\">Current Name: {{ agent.displayName }}</span>\r\n          <input type=\"text\" v-model=\"agent.newDisplayName\" placeholder=\"Display Name\" maxlength=\"60\" class=\"display-name-input\" />\r\n        </div>\r\n        <button @click=\"updateProfile(agent)\" class=\"update-btn\" :disabled=\"!agent.newDisplayName\">\r\n          {{ agent.profileExists ? 'Update' : 'Create' }} Profile\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { databases, Query, ID } from '../../lib/appwrite';\r\n\r\nconst agents = ref([]);\r\nconst loading = ref(true);\r\n\r\nconst fetchAgents = async () => {\r\n  try {\r\n    // 1. Fetch all unique user IDs from agent_activity\r\n    const activityResponse = await databases.listDocuments(\r\n      '684639c3000fbbd515ea',\r\n      '68463a24000779b721a1'\r\n    );\r\n    \r\n    // Get unique user IDs\r\n    const userIds = [...new Set(activityResponse.documents.map(doc => doc.user_Id))];\r\n    \r\n    if (userIds.length === 0) {\r\n      loading.value = false;\r\n      return;\r\n    }\r\n\r\n    // 2. For each user ID, check if a profile exists in agent_profiles\r\n    const agentData = await Promise.all(userIds.map(async (userId) => {\r\n      try {\r\n        const profileResponse = await databases.listDocuments(\r\n          '684639c3000fbbd515ea',\r\n          '68465330002c380c2975',\r\n          [Query.equal('user_Id', userId)]\r\n        );\r\n        const profile = profileResponse.documents[0];\r\n        return {\r\n          userId,\r\n          displayName: profile ? profile.displayName : '',\r\n          newDisplayName: profile ? profile.displayName : '',\r\n          profileId: profile ? profile.$id : null,\r\n          profileExists: !!profile,\r\n        };\r\n      } catch (err) {\r\n        console.error(`Error fetching profile for user ${userId}:`, err);\r\n        return {\r\n          userId,\r\n          displayName: '',\r\n          newDisplayName: '',\r\n          profileId: null,\r\n          profileExists: false,\r\n        };\r\n      }\r\n    }));\r\n    \r\n    agents.value = agentData.filter(agent => agent !== null);\r\n\r\n  } catch (error) {\r\n    console.error('Failed to fetch agents:', error);\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\nconst updateProfile = async (agent) => {\r\n  try {\r\n    const data = {\r\n      user_Id: agent.userId,\r\n      displayName: agent.newDisplayName || agent.displayName,\r\n      approved: true,\r\n    };\r\n    if (agent.profileExists) {\r\n      // Update existing profile\r\n      await databases.updateDocument(\r\n        '684639c3000fbbd515ea',\r\n        '68465330002c380c2975',\r\n        agent.profileId,\r\n        data\r\n      );\r\n    } else {\r\n      // Create new profile\r\n      await databases.createDocument(\r\n        '684639c3000fbbd515ea',\r\n        '68465330002c380c2975',\r\n        ID.unique(),\r\n        data\r\n      );\r\n    }\r\n    alert(`Profile for ${agent.userId} has been saved.`);\r\n    fetchAgents(); // Refresh list\r\n  } catch (error) {\r\n    console.error('Failed to update profile:', error);\r\n    alert('Failed to save profile. Please try again.');\r\n  }\r\n};\r\n\r\nonMounted(fetchAgents);\r\n</script>\r\n\r\n<style scoped>\r\n.agent-management-container {\r\n  background: rgba(45, 55, 72, 0.8);\r\n  padding: 24px;\r\n  border-radius: 16px;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n.section-title {\r\n  font-size: 1.8rem;\r\n  font-weight: bold;\r\n  margin-bottom: 24px;\r\n  color: #ffc107;\r\n  text-align: center;\r\n}\r\n.agents-list {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n.agent-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: #2d3748;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  margin-bottom: 16px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n}\r\n.agent-item:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n}\r\n.agent-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n.agent-name {\r\n  font-weight: bold;\r\n  color: #ffc107;\r\n  margin-bottom: 8px;\r\n}\r\n.agent-id {\r\n  font-size: 0.9rem;\r\n  color: #a0aec0;\r\n}\r\n.display-name-input {\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border: 1px solid rgba(255, 255, 255, 0.4);\r\n  border-radius: 6px;\r\n  padding: 8px 12px;\r\n  color: #333;\r\n  width: 200px;\r\n  font-weight: 500;\r\n}\r\n.update-btn {\r\n  background: #ffc107;\r\n  color: #1a202c;\r\n  border: none;\r\n  border-radius: 8px;\r\n  padding: 10px 16px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background 0.2s ease;\r\n}\r\n.update-btn:hover {\r\n  background: #ffca28;\r\n}\r\n.update-btn:disabled {\r\n  background: #4a5568;\r\n  color: #a0aec0;\r\n  cursor: not-allowed;\r\n}\r\n.agent-status {\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 0.9rem;\r\n  font-weight: bold;\r\n}\r\n.status-approved {\r\n  background-color: #48bb78;\r\n  color: #fff;\r\n}\r\n.status-pending {\r\n  background-color: #f6e05e;\r\n  color: #1a202c;\r\n}\r\n</style>"],"names":["agents","ref","loading","fetchAgents","activityResponse","databases","userIds","doc","agentData","userId","profile","Query","err","agent","error","updateProfile","data","ID","onMounted"],"mappings":"2cAwBA,MAAMA,EAASC,EAAI,CAAA,CAAE,EACfC,EAAUD,EAAI,EAAI,EAElBE,EAAc,SAAY,CAC9B,GAAI,CAEF,MAAMC,EAAmB,MAAMC,EAAU,cACvC,uBACA,sBACN,EAGUC,EAAU,CAAC,GAAG,IAAI,IAAIF,EAAiB,UAAU,IAAIG,GAAOA,EAAI,OAAO,CAAC,CAAC,EAE/E,GAAID,EAAQ,SAAW,EAAG,CACxBJ,EAAQ,MAAQ,GAChB,MACD,CAGD,MAAMM,EAAY,MAAM,QAAQ,IAAIF,EAAQ,IAAI,MAAOG,GAAW,CAChE,GAAI,CAMF,MAAMC,GALkB,MAAML,EAAU,cACtC,uBACA,uBACA,CAACM,EAAM,MAAM,UAAWF,CAAM,CAAC,CACzC,GACwC,UAAU,CAAC,EAC3C,MAAO,CACL,OAAAA,EACA,YAAaC,EAAUA,EAAQ,YAAc,GAC7C,eAAgBA,EAAUA,EAAQ,YAAc,GAChD,UAAWA,EAAUA,EAAQ,IAAM,KACnC,cAAe,CAAC,CAACA,CAC3B,CACO,OAAQE,EAAK,CACZ,eAAQ,MAAM,mCAAmCH,CAAM,IAAKG,CAAG,EACxD,CACL,OAAAH,EACA,YAAa,GACb,eAAgB,GAChB,UAAW,KACX,cAAe,EACzB,CACO,CACF,CAAA,CAAC,EAEFT,EAAO,MAAQQ,EAAU,OAAOK,GAASA,IAAU,IAAI,CAExD,OAAQC,EAAO,CACd,QAAQ,MAAM,0BAA2BA,CAAK,CAClD,QAAY,CACRZ,EAAQ,MAAQ,EACjB,CACH,EAEMa,EAAgB,MAAOF,GAAU,CACrC,GAAI,CACF,MAAMG,EAAO,CACX,QAASH,EAAM,OACf,YAAaA,EAAM,gBAAkBA,EAAM,YAC3C,SAAU,EAChB,EACQA,EAAM,cAER,MAAMR,EAAU,eACd,uBACA,uBACAQ,EAAM,UACNG,CACR,EAGM,MAAMX,EAAU,eACd,uBACA,uBACAY,EAAG,OAAQ,EACXD,CACR,EAEI,MAAM,eAAeH,EAAM,MAAM,kBAAkB,EACnDV,GACD,OAAQW,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,EAChD,MAAM,2CAA2C,CAClD,CACH,EAEA,OAAAI,EAAUf,CAAW"}